{"ast":null,"code":"import axios from 'axios';\nexport var UserListActionTypes = {\n  LOAD_USERLIST: 'LOAD_USERLIST',\n  ADD_USER: 'ADD_USER',\n  REMOVE_USER: 'REMOVE_USER',\n  UPDATE_USER: 'UPDATE_USER'\n};\nexport var UserListActionCreators = {\n  // 直接把后台获取的用户的数据直接替换当前state中的UserList\n  LoadUserListAction: function LoadUserListAction(payload) {\n    return {\n      type: UserListActionTypes.LOAD_USERLIST,\n      payload: payload\n    };\n  },\n  LoadUserListAsyncAction: function LoadUserListAsyncAction() {\n    var _this = this;\n\n    return function (dispatch, getState) {\n      axios.get('http://localhost:3009/userlist').then(function (res) {\n        dispatch(_this.LoadUserListAction(res.data));\n      });\n    };\n  },\n  RemoveUserAction: function RemoveUserAction(payload) {\n    return {\n      type: UserListActionTypes.REMOVE_USER,\n      payload: payload\n    };\n  },\n  RemoveUserAsyncAction: function RemoveUserAsyncAction(payload) {\n    //payload = User.Id\n    return function (dispatch, getState) {\n      return axios.delete('http://localhost:3009/userlist/' + payload).then(function (res) {\n        // 提示删除成功！，把redux中的数据移除掉\n        dispatch(UserListActionCreators.RemoveUserAction(payload));\n      });\n    };\n  },\n  UpdateUserAction: function UpdateUserAction(payload) {\n    return {\n      type: UserListActionTypes.UPDATE_USER,\n      payload: payload\n    };\n  },\n  UpdateUserAsynAction: function UpdateUserAsynAction(payload) {\n    var _this2 = this;\n\n    //payload = item\n    return function (dispatch, getState) {\n      return axios.put('http://localhost:3009/userlist/' + payload.Id, payload).then(function (res) {\n        // 修改redux里面的数据\n        dispatch(_this2.UpdateUserAction(res.data));\n      });\n    };\n  },\n  AddUserAction: function AddUserAction(payload) {\n    return {\n      type: UserListActionTypes.ADD_USER,\n      payload: payload\n    };\n  },\n  AddUserAsynAction: function AddUserAsynAction(payload) {\n    var _this3 = this;\n\n    return function (dispatch, getState) {\n      return axios.post('http://localhost:3009/userlist', payload).then(function (res) {\n        return dispatch(_this3.AddUserAction(res.data));\n      });\n    };\n  }\n};","map":{"version":3,"sources":["/Users/zionhugh/GoogleDrive_Folder/Code_Practices/老马培训/React-Redux/src/actions/UserListAction.js"],"names":["axios","UserListActionTypes","LOAD_USERLIST","ADD_USER","REMOVE_USER","UPDATE_USER","UserListActionCreators","LoadUserListAction","payload","type","LoadUserListAsyncAction","dispatch","getState","get","then","res","data","RemoveUserAction","RemoveUserAsyncAction","delete","UpdateUserAction","UpdateUserAsynAction","put","Id","AddUserAction","AddUserAsynAction","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,mBAAmB,GAAG;AACjCC,EAAAA,aAAa,EAAE,eADkB;AAEjCC,EAAAA,QAAQ,EAAE,UAFuB;AAGjCC,EAAAA,WAAW,EAAE,aAHoB;AAIjCC,EAAAA,WAAW,EAAE;AAJoB,CAA5B;AAOP,OAAO,IAAMC,sBAAsB,GAAG;AACpC;AACAC,EAAAA,kBAFoC,8BAEjBC,OAFiB,EAER;AAC1B,WAAO;AACLC,MAAAA,IAAI,EAAER,mBAAmB,CAACC,aADrB;AAELM,MAAAA,OAAO,EAAPA;AAFK,KAAP;AAID,GAPmC;AAQpCE,EAAAA,uBARoC,qCAQV;AAAA;;AACxB,WAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC7BZ,MAAAA,KAAK,CAACa,GAAN,CAAU,gCAAV,EACGC,IADH,CACQ,UAAAC,GAAG,EAAI;AACXJ,QAAAA,QAAQ,CAAC,KAAI,CAACJ,kBAAL,CAAwBQ,GAAG,CAACC,IAA5B,CAAD,CAAR;AACD,OAHH;AAID,KALD;AAMD,GAfmC;AAgBpCC,EAAAA,gBAhBoC,4BAgBnBT,OAhBmB,EAgBV;AACxB,WAAO;AACLC,MAAAA,IAAI,EAAER,mBAAmB,CAACG,WADrB;AAELI,MAAAA,OAAO,EAAPA;AAFK,KAAP;AAID,GArBmC;AAsBpCU,EAAAA,qBAtBoC,iCAsBdV,OAtBc,EAsBL;AAAI;AACjC,WAAO,UAAUG,QAAV,EAAoBC,QAApB,EAA8B;AACnC,aAAOZ,KAAK,CAACmB,MAAN,CAAa,oCAAmCX,OAAhD,EACNM,IADM,CACD,UAAAC,GAAG,EAAI;AACX;AACAJ,QAAAA,QAAQ,CAACL,sBAAsB,CAACW,gBAAvB,CAAwCT,OAAxC,CAAD,CAAR;AACD,OAJM,CAAP;AAKD,KAND;AAOD,GA9BmC;AA+BpCY,EAAAA,gBA/BoC,4BA+BnBZ,OA/BmB,EA+BV;AACxB,WAAO;AACLC,MAAAA,IAAI,EAAER,mBAAmB,CAACI,WADrB;AAELG,MAAAA,OAAO,EAAPA;AAFK,KAAP;AAID,GApCmC;AAqCpCa,EAAAA,oBArCoC,gCAqCfb,OArCe,EAqCN;AAAA;;AAAI;AAChC,WAAO,UAACG,QAAD,EAAWC,QAAX,EAAwB;AAC7B,aAAOZ,KAAK,CACTsB,GADI,CACA,oCAAmCd,OAAO,CAACe,EAD3C,EAC+Cf,OAD/C,EAEJM,IAFI,CAEC,UAAAC,GAAG,EAAI;AACX;AACAJ,QAAAA,QAAQ,CAAC,MAAI,CAACS,gBAAL,CAAsBL,GAAG,CAACC,IAA1B,CAAD,CAAR;AACD,OALI,CAAP;AAMD,KAPD;AAQD,GA9CmC;AA+CpCQ,EAAAA,aA/CoC,yBA+CtBhB,OA/CsB,EA+Cb;AACrB,WAAO;AACLC,MAAAA,IAAI,EAAER,mBAAmB,CAACE,QADrB;AAELK,MAAAA,OAAO,EAAPA;AAFK,KAAP;AAID,GApDmC;AAqDpCiB,EAAAA,iBArDoC,6BAqDlBjB,OArDkB,EAqDT;AAAA;;AACzB,WAAO,UAACG,QAAD,EAAWC,QAAX;AAAA,aACLZ,KAAK,CAAC0B,IAAN,CAAW,gCAAX,EAA6ClB,OAA7C,EACCM,IADD,CACM,UAAAC,GAAG;AAAA,eAAIJ,QAAQ,CAAC,MAAI,CAACa,aAAL,CAAmBT,GAAG,CAACC,IAAvB,CAAD,CAAZ;AAAA,OADT,CADK;AAAA,KAAP;AAGD;AAzDmC,CAA/B","sourcesContent":["import axios from 'axios';\n\nexport const UserListActionTypes = {\n  LOAD_USERLIST: 'LOAD_USERLIST',\n  ADD_USER: 'ADD_USER',\n  REMOVE_USER: 'REMOVE_USER',\n  UPDATE_USER: 'UPDATE_USER'\n}\n\nexport const UserListActionCreators = {\n  // 直接把后台获取的用户的数据直接替换当前state中的UserList\n  LoadUserListAction(payload) {\n    return {\n      type: UserListActionTypes.LOAD_USERLIST,\n      payload\n    }\n  },\n  LoadUserListAsyncAction() {\n    return (dispatch, getState) => {\n      axios.get('http://localhost:3009/userlist')\n        .then(res => {\n          dispatch(this.LoadUserListAction(res.data))\n        });\n    }\n  },\n  RemoveUserAction(payload) {\n    return {\n      type: UserListActionTypes.REMOVE_USER,\n      payload\n    }\n  },\n  RemoveUserAsyncAction(payload) {   //payload = User.Id\n    return function (dispatch, getState) {\n      return axios.delete('http://localhost:3009/userlist/'+ payload)\n      .then(res => {\n        // 提示删除成功！，把redux中的数据移除掉\n        dispatch(UserListActionCreators.RemoveUserAction(payload));\n      });\n    }\n  },\n  UpdateUserAction(payload) {\n    return {\n      type: UserListActionTypes.UPDATE_USER,\n      payload\n    }\n  },\n  UpdateUserAsynAction(payload) {   //payload = item\n    return (dispatch, getState) => {\n      return axios\n        .put('http://localhost:3009/userlist/'+ payload.Id, payload)\n        .then(res => {\n          // 修改redux里面的数据\n          dispatch(this.UpdateUserAction(res.data));\n        })\n    }\n  },\n  AddUserAction(payload) {\n    return {\n      type: UserListActionTypes.ADD_USER,\n      payload\n    }\n  },\n  AddUserAsynAction(payload) {\n    return (dispatch, getState) => \n      axios.post('http://localhost:3009/userlist', payload)\n      .then(res => dispatch(this.AddUserAction(res.data)))\n  }\n}\n"]},"metadata":{},"sourceType":"module"}